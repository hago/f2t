plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'maven-publish'
    id "org.jetbrains.dokka" version "1.7.10"
    id "jacoco"
    id "org.sonarqube" version "3.5.0.2730"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

group 'com.hagoapp'
version '0.8.3'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.7.20'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.20'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20'

    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.3'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.3'
    implementation group: 'org.apache.parquet', name: 'parquet-avro', version: '1.13.1'
    implementation group: 'org.apache.hadoop', name: 'hadoop-common', version: '3.3.6'
    //implementation group: 'org.apache.parquet', name: 'parquet-hadoop', version: '1.12.2'
    implementation group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: '3.3.6'

    implementation 'com.github.albfernandez:juniversalchardet:2.4.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '12.2.0.jre11'

    runtimeOnly fileTree('libs') { include '*.jar' }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation group: 'ch.qos.logback', name:'logback-classic', version: '1.4.11'

    testImplementation group:'org.postgresql',name:'postgresql',version:'42.6.0'
    testImplementation 'org.mariadb.jdbc:mariadb-java-client:3.0.10'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testRuntimeOnly fileTree('libs') { include '*.jar' }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}
tasks.withType(Javadoc).configureEach {
    options.encoding = "UTF-8"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs = ['-Xjvm-default=all-compatibility']
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

test {
    // uncomment following 2 lines for large file test
    // minHeapSize = "8192M"
    // maxHeapSize = "16384M"
    useJUnitPlatform()
    systemProperties = System.properties as Map<String, ?>
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}